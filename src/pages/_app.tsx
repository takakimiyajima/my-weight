import { Provider, signIn, useSession } from 'next-auth/client'
import Head from "next/head"
import { AppProps } from "next/dist/shared/lib/router/router"
import { ThemeProvider } from "styled-components"
import { THEME } from "@/constants"
import "@/styles/destyle.css"
import "@/styles/globals.css"
import { UserAgentContextProvider } from "@/contexts/userAgent/userAgentProvider"
// import { UserRepository } from '@/repositories'

type Props = {
  userAgent?: string;
} & AppProps

export const NeedLogin = ({ children }) => {
  const [session, loading] = useSession()
  if (loading) {
    return null
  }

  if (!session) {
    signIn()
    return null
  }

  return children
}

// export const NeedToCreateUser = async ({ children }) => {
//   const [session] = useSession()
//   const userId = session.userId as number
//   /** API */
//   const user = await UserRepository.fetchUser(userId)

//   return children
// }

function App({ Component, pageProps, uaString }: Props) {
  return  (
    <>
      <Head>
        <title>My Weight Checker</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Provider session={pageProps.session}>
        <NeedLogin>
          <ThemeProvider theme={THEME}>
            <UserAgentContextProvider uaString={uaString}>
              <Component {...pageProps} />
            </UserAgentContextProvider>
          </ThemeProvider>
        </NeedLogin>
      </Provider>
    </>
  )
}

export default App

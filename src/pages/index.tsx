import React from 'react'
import Head from 'next/head'
import { signIn, useSession } from "next-auth/client"
import { SpScreen } from "@/components/sp/screens"
import { useUserAgent } from "@/contexts/userAgent/useUserAgent"
import { WeightEntity } from '@/entities'
import { WeightRepository } from '@/repositories'
import { WeightContextProvider } from '@/contexts/weight/weightProvider'

type Props = {
  weights: Array<WeightEntity>
}

export async function getServerSideProps() {
  try {
    const weights = await WeightRepository.fetchWeights()

    return {
      props: {
        weights
      }
    }
  } catch (error) {
    console.log(error)
  } 
}

export default function Home(props: Props) {
  const [session, loading] = useSession()
  const userDevice = useUserAgent()
  // TODO: when data missing, show error page
  if (!props.weights.length) {
    return <p>loading...</p>
  }

  // TODO: prepare some components
  return (
    <>
      {!session && (
        <>
          {loading ? (
              <>Loading ...</>
          ) : (
              <>
                  Not signed in <br/>
                  <button onClick={() => signIn()}>Sign in</button>
              </>
          )}
        </>
      )}
      {session && (
        <>
          <Head>
            <title>My Weight Checker</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
          </Head>
  
          <WeightContextProvider weights={props.weights}>
            {userDevice.isMobile ? (
              <SpScreen />
            ) : (
              <p>Under Construction for PC</p>
              // <PcContent />
            )}
          </WeightContextProvider>
        </>
      )}
    </>
  )
}
